<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <title>List</title>
   @*  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css" rel="stylesheet" />  *@
</head>
<body>
    <h2>List auto</h2>
    <form name="userForm">
            <input type="hidden" name="id" value="0" />
            <div class="form-group col-md-5">
                <label for="name">Color:</label>
                <input class="form-control" name="name" />
            </div>
            <div class="form-group col-md-5">
                <label for="age">Make:</label>
                <input class="form-control" name="age"/>
            </div>
            <div class="panel-body">
                <button type="submit" id="submit" class="btn btn-primary">Save</button>
                <a id="reset" class="btn btn-primary">Reset</a>
            </div>
        </form>
    <table class="table table-condensed table-striped  col-md-6">
    <thead><tr><th>Id</th><th>PetName</th><th>Color</th><th>Make</th></tr></thead>
    <tbody>
    </tbody>

    </table>
   @*  <script>
        var settings = {
            "async": true,
            "crossDomain": true,
            "url": "http://localhost:62892/api/Inventory",
            "method": "GET"
        }
        $.ajax(settings).done(function (response) {

            var size = Object.keys(response).length;
  
            var body = document.getElementsByTagName("body")[0];
            var tbl = document.createElement("table");
            var tblBody = document.createElement("tbody");
            for (var i = 0; i < size; i++) {
                var row = document.createElement("tr");
                
                    var cell1 = document.createElement("td");
                    var cellText1 = document.createTextNode(response[i].Id);
                    cell1.appendChild(cellText1);
                    row.appendChild(cell1);
                
                    var cell2 = document.createElement("td");
                    var cellText2 = document.createTextNode(response[i].Color);
                    cell2.appendChild(cellText2);
                    row.appendChild(cell2);

                    var cell3 = document.createElement("td");
                    var cellText3 = document.createTextNode(response[i].PetName);
                    cell3.appendChild(cellText3);
                    row.appendChild(cell3);

                    var cell4 = document.createElement("td");
                    var cellText4 = document.createTextNode(response[i].Make);
                    cell4.appendChild(cellText4);
                    row.appendChild(cell4);
                
                    tblBody.appendChild(row);
            }
            tbl.appendChild(tblBody);
            body.appendChild(tbl);
            tbl.setAttribute("class","table table-condensed table-striped col-md-5");
        });
    </script> *@

    <script>
        // Получение всех пользователей
        async function GetUsers() {
            // отправляет запрос и получаем ответ
            const response = await fetch("http://localhost:62892/api/Inventory", {
                method: "GET",
                headers: { "Accept": "application/json" },
            });
            // если запрос прошел нормально
            if (response.ok === true) {
                // получаем данные
                const cars = await response.json();
                console.log(cars);
                let rows = document.querySelector("tbody"); 
                cars.forEach(car => {
                    rows.append(row(car));
                });
         
        }};
// Получение одного пользователя
        async function GetUser(id) {
            const response = await fetch("http://localhost:62892/api/Inventory" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const user = await response.json();
                const form = document.forms["userForm"];
                form.elements["id"].value = user.Id;
                form.elements["name"].value = user.Color;
                form.elements["age"].value = user.PetName;
            }
        }
        // Добавление пользователя
        async function CreateUser(userName, color) {
 
            const response = await fetch("http://localhost:62892/api/Inventory", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    PetName: userName,
                    Color: color
                })
            });
            if (response.ok === true) {
                const user = await response.json();
                reset();
                document.querySelector("tbody").append(row(user));
            }
        }
        // Изменение пользователя
        async function EditUser(userId, userName, userAge) {
            const response = await fetch("http://localhost:62892/api/Inventory", {
                method: "PUT",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    id: parseInt(userId, 10),
                    name: userName,
                    age: parseInt(userAge, 10)
                })
            });
            if (response.ok === true) {
                const user = await response.json();
                reset();
                document.querySelector("tr[data-rowid='" + user.id + "']").replaceWith(row(user));
            }
        }
        // Удаление пользователя
        async function DeleteUser(id) {
            const response = await fetch("http://localhost:62892/api/Inventory" + id, {
                method: "DELETE",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const user = await response.json();
                document.querySelector("tr[data-rowid='" + user.Id + "']").remove();
            }
        }
 
        // сброс формы
        function reset() {
            const form = document.forms["userForm"];
            form.reset();
            form.elements["id"].value = 0;
        }
        // создание строки для таблицы
        function row(car) {
 
            const tr = document.createElement("tr");
            tr.setAttribute("data-rowid", car.Id);
 
            const idTd = document.createElement("td");
            idTd.append(car.Id);
            tr.append(idTd);
 
            const nameTd = document.createElement("td");
            nameTd.append(car.PetName);
            tr.append(nameTd);
 
            const ageTd = document.createElement("td");
            ageTd.append(car.Color);
            tr.append(ageTd);

             const makeTd = document.createElement("td");
            makeTd.append(car.Make);
            tr.append(makeTd);
             
            const linksTd = document.createElement("td");
 
            const editLink = document.createElement("a");
            editLink.setAttribute("data-id", car.Id);
            editLink.setAttribute("style", "cursor:pointer;padding:15px;");
            editLink.append("Change");
            editLink.addEventListener("click", e => {
 
                e.preventDefault();
                GetUser(car.Id);
            });
            linksTd.append(editLink);
 
            const removeLink = document.createElement("a");
            removeLink.setAttribute("data-id", car.Id);
            removeLink.setAttribute("style", "cursor:pointer;padding:15px;");
            removeLink.append("Delete");
            removeLink.addEventListener("click", e => {
 
                e.preventDefault();
                DeleteUser(car.Id);
            });
 
            linksTd.append(removeLink);
            tr.appendChild(linksTd);
 
            return tr;
        }
        // сброс значений формы
        document.getElementById("reset").click(function (e) {
 
            e.preventDefault();
            reset();
        })
 
        // отправка формы
        document.forms["userForm"].addEventListener("submit", e => {
            e.preventDefault();
            const form = document.forms["userForm"];
            const id = form.elements["id"].value;
            const name = form.elements["name"].value;
            const age = form.elements["age"].value;
            if (id == 0)
                CreateUser(name, age);
            else
                EditUser(id, name, age);
        });
 
        // загрузка пользователей
        GetUsers();

    </script>

</body>
</html>