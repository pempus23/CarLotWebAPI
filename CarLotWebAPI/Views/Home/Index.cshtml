<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <title class="blockquote-footer">List</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css"/>   
    <script src="~/Scripts/jquery-2.1.4.js"></script>
</head>
<body>
    @*  <form name="userForm">
            <input type="hidden" name="id" value="0" />
            <div class="form-group col-md-3">
                <label for="color">Color:</label>
                <input class="form-control" name="color" />
            </div>
            <div class="form-group col-md-3">
                <label for="make">Make:</label>
                <input class="form-control" name="make"/>
            </div>
             <div class="form-group col-md-3">
                <label for="petName">PetName:</label>
                <input class="form-control" name="petName"/>
            </div>
            <div class="panel-body">
                <button type="submit" id="submit" class="btn btn-success btn-lg btn-block" onclick="reloadPage()">Save</button>
            </div>
        </form>  *@
@*     <button type="submit" class="btn btn-success btn-lg col-md-4 col-md-offset-4" data-toggle="modal" data-target="#ModalForm">New car</button>*@    
    <table class="table table-condensed table-striped  col-md-6">
    <thead><tr><th>Id</th><th>PetName</th><th>Color</th><th>Make</th></tr></thead>
    <tbody>
    </tbody>    
    </table>

  <script>
        function reloadPage(){
            location.reload(true);
        }
        //Get orders
         async function GetOrders(id) {
            const response = await fetch("http://localhost:62892/api/Customer/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const order = await response.json();
                console.log(order);
                if(order[0] != null){
                    order.forEach(function(ord){
                        alert(ord.Id + ' ' +ord.FullName);
                    })
                }
                else{
                    alert('This car don`t have customers');
                }
                
            }
        }
        //Отримання покупців
          async function GetCustomer() {
            const response = await fetch("http://localhost:62892/api/Customer", {
                method: "GET",
                headers: { "Accept": "application/json" },
            });
            if (response.ok === true) {
                const customers = await response.json();
                console.log(customers);
         
        }};
        // Получение всех пользователей
        async function GetUsers() {
            const response = await fetch("http://localhost:62892/api/Inventory", {
                method: "GET",
                headers: { "Accept": "application/json" },
            });
            if (response.ok === true) {
                const cars = await response.json();
                console.log(cars);
                let rows = document.querySelector("tbody"); 
                cars.forEach(car => {
                    rows.append(row(car));
                });
         
        }};
        // Получение одного пользователя
        async function GetUser(id) {
            const response = await fetch("http://localhost:62892/api/Inventory/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const car = await response.json();
                const form = document.forms["changeForm"];
                form.elements["id"].value = car.Id;
                form.elements["color"].value = car.Color;
                form.elements["petName"].value = car.PetName;
                form.elements["make"].value = car.Make;
            }
        }
        // Добавление пользователя
        async function CreateUser(userName, color, make) {
 
            const response = await fetch("http://localhost:62892/api/Inventory", {
                method: "POST",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    PetName: userName,
                    Color: color,
                    Make: make
                })
            });
            if (response.ok === true) {
                const car = await response.json();
                resetModal();
                document.querySelector("tbody").append(row(car));
            }
        }
        // Изменение пользователя
        async function EditUser(id, userName, color, make) {
            const response = await fetch("http://localhost:62892/api/Inventory/"+ id, {
                method: "PUT",
                headers: { "Accept": "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({
                    Id: parseInt(id, 10),
                    PetName: userName,
                    Color: color,
                    Make: make
                })
            });
            if (response.ok === true) {
                const car = await response.json();
                //resetModal();
                document.querySelector("tr[data-rowid='" + id + "']").replaceWith(row(car));
            }
        }
        // Удаление пользователя
        async function DeleteUser(Id) {
            const response = await fetch("http://localhost:62892/api/Inventory/" + Id, {
                method: "DELETE",
                headers: { "Accept": "application/json", "Content-Type": "application/json"  },
                body: JSON.stringify({
                    Id: Id
                })
            });
            if (response.ok === true) {             
                document.querySelector("tr[data-rowid='" + Id + "']").remove();     
            }
        }

        function resetModal() {
            const form = document.forms["addForm"];
            form.reset();
            form.elements["id"].value = 0;
        }
        // create tabl
        function row(car) {
 
            const tr = document.createElement("tr");
            tr.setAttribute("data-rowid", car.Id);
 
            const idTd = document.createElement("td");
            idTd.append(car.Id);
            tr.append(idTd);
 
            const nameTd = document.createElement("td");
            nameTd.append(car.PetName);
            tr.append(nameTd);
 
            const ageTd = document.createElement("td");
            ageTd.append(car.Color);
            tr.append(ageTd);

             const makeTd = document.createElement("td");
            makeTd.append(car.Make);
            tr.append(makeTd);
             
            const linksTd = document.createElement("td");
 
            const editLink = document.createElement("a");
            editLink.setAttribute("data-id", car.Id);
            editLink.setAttribute("style", "cursor:pointer;padding:2px;margin-right:10px;");
            editLink.setAttribute("class", "btn btn-warning col-md-4");
            editLink.setAttribute("data-toggle", "modal");
            editLink.setAttribute("data-target", "#ModalChange");
            editLink.append("Change");
            editLink.addEventListener("click", e => {
 
                e.preventDefault();
                GetUser(car.Id);
            });
            linksTd.append(editLink);

            const removeLink = document.createElement("a");
            removeLink.setAttribute("data-id", car.Id);
            removeLink.setAttribute("style", "cursor:pointer;padding:2px;");
            removeLink.setAttribute("class", "btn btn-danger col-md-4");
            removeLink.append("Delete");
            removeLink.addEventListener("click", e => {
 
                e.preventDefault();
                DeleteUser(car.Id);
                             
            });
            linksTd.append(removeLink);

            const linksTdTwo = document.createElement("td");

            const modal = document.createElement("button");
            modal.setAttribute("style", "cursor:pointer;padding:5px;");
            modal.setAttribute("data-toggle", "modal");
            modal.setAttribute("data-target", "#myModal");
            modal.setAttribute("class", "btn btn-primary");
            modal.append("Customers");
            modal.addEventListener("click", e => {
 
                e.preventDefault();
                out(car.Id);
                             
            });
            linksTdTwo.append(modal);
            
            tr.appendChild(linksTd);
    
            tr.appendChild(linksTdTwo);
 
            return tr;
        }

 
         //отправка формы
         //document.forms["userForm"].addEventListener("submit", e => {
          //  e.preventDefault();
         //   const form = document.forms["userForm"];
           // const id = form.elements["id"].value;
         //   const userName = form.elements["petName"].value;
          //  const color = form.elements["color"].value;
        //    const make = form.elements["make"].value;
           // if (id == 0)
        //        CreateUser(userName, color, make);
        //    else
       //         EditUser(id, userName, color, make);
      //  });
 

        function createFromModal(){
            document.forms["addForm"].addEventListener("submit", e => {
            e.preventDefault();

            const form = document.forms["addForm"];
            const id = form.elements["id"].value;
            const userName = form.elements["petName"].value;
            const color = form.elements["color"].value;
            const make = form.elements["make"].value;
                CreateUser(userName, color, make)
            });
        }

         function changeFromModal(){
            document.forms["changeForm"].addEventListener("submit", e => {
            e.preventDefault();

            const form = document.forms["changeForm"];
            const id = form.elements["id"].value;
            const userName = form.elements["petName"].value;
            const color = form.elements["color"].value;
            const make = form.elements["make"].value;
                EditUser(id, userName, color, make)
            });
        }
 
            async function out(id){
            var p;
            p = document.getElementById('modalT');
            p.innerHTML =' ';

            const response = await fetch("http://localhost:62892/api/Customer/" + id, {
                method: "GET",
                headers: { "Accept": "application/json" }
            });
            if (response.ok === true) {
                const order = await response.json();
                console.log(order);
                if(order[0] != null){
                    order.forEach(function(ord){
                        p.innerHTML += ord.Id + ' ' +'<em>'+ ord.FullName +'</em>' + '</br>';
                    })
                }
                else{
                     p.innerHTML = 'This car don`t have customers';
                }
                
            }

        }

        // загрузка пользователей
        GetUsers();
        GetCustomer();
        
    </script>
    
    <div id="myModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">X</button>
                    <h3 class="modal-title text-center text-primary">CUSTOMER LIST</h3>
                </div>
                <div class="modal-body">
                        <p id = "modalT" class="text-center"></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal">close</button>
                </div>
            </div>       
        </div>
    </div>

    <div id="ModalChange" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">X</button>
                    <h3 class="modal-title text-center text-primary">CAR</h3>
                </div>
                <div class="modal-body">
                        <form name="changeForm">
                        <input type="hidden" name="id" value="0" />
                        <div class="form-group col-sm-3">
                            <label for="color">Color:</label>
                            <input class="form-control" name="color" />
                        </div>
                        <div class="form-group col-sm-3">
                            <label for="make">Make:</label>
                            <input class="form-control" name="make"/>
                        </div>
                        <div class="form-group col-sm-5 ">
                            <label for="petName">PetName:</label>
                            <input class="form-control" name="petName"/>
                        </div>
                        <div class="panel-body">
                             <button type="submit" id="submit" class="btn btn-success btn-lg btn-block" onclick = "changeFromModal()">Save</button>
                        </div>
                        </form>
                </div>
                <div class="modal-footer">
                    <button  class="btn btn-danger" data-dismiss="modal" aria-label="Close">Close</button>
                </div>
            </div>       
        </div>
    </div>

    <div id="ModalAdd" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">X</button>
                    <h3 class="modal-title text-center text-primary">NEW CAR</h3>
                </div>
                <div class="modal-body">
                        <form name="addForm">
                        <input type="hidden" name="id" value="0" />
                        <div class="form-group col-sm-3">
                            <label for="color">Color:</label>
                            <input class="form-control" name="color" />
                        </div>
                        <div class="form-group col-sm-3">
                            <label for="make">Make:</label>
                            <input class="form-control" name="make"/>
                        </div>
                        <div class="form-group col-sm-5 ">
                            <label for="petName">PetName:</label>
                            <input class="form-control" name="petName"/>
                        </div>
                        <div class="panel-body">
                            <button  type="submit" id="submit"  class="btn btn-success btn-lg btn-block" onclick = "createFromModal()">Save</button>
                        </div>
                        </form>
                </div>
                <div class="modal-footer">
                      <button  class="btn btn-danger" data-dismiss="modal" aria-label="Close">Close</button>
                 </div>
            </div>       
        </div>
    </div>
</body>
</html>